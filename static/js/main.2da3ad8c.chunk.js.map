{"version":3,"sources":["Styles/Styles.js","App.js","reportWebVitals.js","index.js"],"names":["Clock","styled","div","Num","h1","App","useState","start","setStart","time","setTime","useEffect","interval","setInterval","prevTime","clearInterval","className","Math","floor","slice","Button","onClick","variant","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OAEaA,EAAQC,IAAOC,IAAV,qPAYLC,EAAMF,IAAOG,GAAV,oE,eCkCDC,MA3Cf,WAEE,MAA0BC,oBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwBF,mBAAS,GAAjC,mBAAOG,EAAP,KAAaC,EAAb,KAgBA,OAdAC,qBAAU,WACR,IAAIC,EAAW,KAUf,OARGL,EACDK,EAAWC,aAAY,WACrBH,GAAQ,SAAAI,GAAQ,OAAIA,EAAW,QAC9B,IAEHC,cAAcH,GAGT,kBAAMG,cAAcH,MAC1B,CAACL,IAGF,sBAAKS,UAAU,MAAf,UACE,4CACA,eAAChB,EAAD,WACE,eAACG,EAAD,YAAO,IAAMc,KAAKC,MAAOT,EAAO,IAAS,KAAKU,OAAO,GAArD,OACA,eAAChB,EAAD,YAAO,IAAMc,KAAKC,MAAOT,EAAO,IAAQ,KAAKU,OAAO,GAApD,OACA,cAAChB,EAAD,WAAO,IAAOM,EAAO,GAAM,KAAKU,OAAO,SAEvCZ,GAAkB,IAATE,GACT,cAACW,EAAA,EAAD,CAAQC,QAAS,kBAAMb,GAAS,IAAOc,QAAQ,OAA/C,mBAEDf,GACC,cAACa,EAAA,EAAD,CAAQC,QAAS,kBAAMb,GAAS,IAAQc,QAAQ,OAAhD,mBAEAf,GAAkB,IAATE,GACT,gCACE,cAACW,EAAA,EAAD,CAAQJ,UAAU,MAAMK,QAAS,kBAAMb,GAAS,IAAOc,QAAQ,OAA/D,oBACA,cAACF,EAAA,EAAD,CAAQJ,UAAU,MAAMK,QAAS,kBAAMX,EAAQ,IAAIY,QAAQ,OAA3D,0BC7BKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2da3ad8c.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const Clock = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-evenly;\n  font-size: 28px;\n  width: 330px;\n  height: 80px;\n  border: 2px solid black;\n  margin-bottom: 20px;\n  /* background-color: tomato; */\n`\n\nexport const Num = styled.h1`\n  width: 120px;\n  text-align: center;\n`","import React, { useState, useEffect } from 'react'\nimport './App.css';\nimport { Clock, Num } from './Styles/Styles'\nimport { Button } from 'react-bootstrap'\n\nfunction App() {\n\n  const [start, setStart] = useState(false)\n  const [time, setTime] = useState(0)\n\n  useEffect(() => {\n    let interval = null;\n\n    if(start){\n      interval = setInterval(() => {\n        setTime(prevTime => prevTime + 10)\n      }, 10)\n    }else{\n      clearInterval(interval)\n    }\n\n    return () => clearInterval(interval)\n  }, [start])\n\n  return (\n    <div className='App'>\n      <h1>Stop Watch</h1>\n      <Clock>\n        <Num>{('0' + Math.floor((time / 60000) % 60)).slice(-2)}:</Num>\n        <Num>{('0' + Math.floor((time / 1000) % 60)).slice(-2)}:</Num>\n        <Num>{('0' + (time / 10) % 100).slice(-2)}</Num>\n      </Clock>\n      {!start && time === 0 &&\n        <Button onClick={() => setStart(true)} variant='dark'>Start</Button>\n      }\n      {start && \n        <Button onClick={() => setStart(false)} variant='dark'>Stop</Button>\n      }\n      {!start && time !== 0 &&\n        <div>\n          <Button className='btn' onClick={() => setStart(true)} variant='dark'>Resume</Button>\n          <Button className='btn' onClick={() => setTime(0)} variant='dark'>Reset</Button>\n        </div>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}